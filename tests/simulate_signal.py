import re

# üß™ –°—é–¥–∏ –≤—Å—Ç–∞–≤–ª—è–π —Ç–µ—Å—Ç–æ–≤–∏–π —Å–∏–≥–Ω–∞–ª –∑ Telegram
text = """
KAVA USDT Long üìà

üß† –ü–ª–µ—á–æ: –¥–æ 25
–°–æ–±–ª—é–¥–∞–µ–º —Ä–∏—Å–∫ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç

üí≤ –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞: 0,4104 - 0,3780
‚úÖ –¢–µ–π–∫: 0,4433
‚ùå –°—Ç–æ–ø: 0,3730 (—Å–º–æ—Ç—Ä—è –æ—Ç–∫—É–¥–∞ –≤—ã –∑–∞—Ö–æ–¥–∏–ª–∏)
"""

print("\nüì© –¢–ï–°–¢–û–í–ï –ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø:")
print(text.strip())

match_pair = re.search(r"([A-Z]{2,10})\s*\/?\s*(USDT|BTC)\s+(Long|Short)", text, re.IGNORECASE)
match_leverage = re.search(r"–ü–ª–µ—á–æ\s*[:\-]?\s*–¥–æ?\s*(\d+)", text, re.IGNORECASE)
match_entry = re.search(r"–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞\s*[:\-]?\s*([\d\.,]+)", text, re.IGNORECASE)

if match_pair:
    pair = f"{match_pair.group(1).upper()}/{match_pair.group(2).upper()}"
    direction = match_pair.group(3).capitalize()
    leverage = f"x{match_leverage.group(1)}" if match_leverage else "???"
    entry = match_entry.group(1).replace(",", ".") if match_entry else "???"

    print("\n‚úÖ –Ü–º—ñ—Ç–∞—Ü—ñ—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –æ—Ä–¥–µ—Ä–∞:")
    print(f"‚û° –ü–∞—Ä–∞: {pair}")
    print(f"‚û° –ù–∞–ø—Ä—è–º: {direction}")
    print(f"‚û° –ü–ª–µ—á–µ: {leverage}")
    print(f"‚û° –¢–æ—á–∫–∞ –≤—Ö–æ–¥—É: {entry}")
    print("üöß (–¢—É—Ç –±—É–¥–µ —Ä–µ–∞–ª—å–Ω–∏–π –∑–∞–ø–∏—Ç –Ω–∞ OKX API)")
else:
    print("‚ö†Ô∏è –°–∏–≥–Ω–∞–ª –Ω–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–æ.")
