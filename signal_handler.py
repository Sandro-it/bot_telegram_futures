import re
from trade_utils import calculate_trade_levels, should_enter_trade
from okx_trader import (
    get_current_price,
    open_market_position,
    set_tp_sl,
)

def process_signal(signal_text):
    try:
        print(f"üîç –°–∏–≥–Ω–∞–ª:\n{signal_text}")

        # üìå –ü–∞—Ä—Å–∏–Ω–≥ —Ç–µ–∫—Å—Ç—É
        pair_match = re.search(r'([A-Z]+)[-/ ]?USDT', signal_text, re.IGNORECASE)
        direction = 'SHORT' if 'SHORT' in signal_text.upper() else 'LONG'
        entry_match = re.search(r'(—Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞|–≤—Ö–æ–¥)[:\s]*([\d.]+)', signal_text, re.IGNORECASE)

        if not pair_match or not entry_match:
            print("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏—Ç—è–≥–Ω—É—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —ñ–∑ —Å–∏–≥–Ω–∞–ª—É.")
            return

        pair = pair_match.group(1).upper()
        entry_price = float(entry_match.group(2))
        symbol = f"{pair}-USDT-SWAP"

        print(f"üìà –ü–∞—Ä–∞: {symbol} | –ù–∞–ø—Ä—è–º: {direction} | –¢–í–•: {entry_price}")

        # üîç –ü–æ—Ç–æ—á–Ω–∞ —Ü—ñ–Ω–∞
        current_price = get_current_price(symbol)
        if not should_enter_trade(entry_price, current_price):
            print("‚õî –¶—ñ–Ω–∞ –∑–º—ñ–Ω–∏–ª–∞—Å—å –±—ñ–ª—å—à–µ –Ω—ñ–∂ –Ω–∞ 1% ‚Äî –Ω–µ –≤—Ö–æ–¥–∏–º–æ –≤ —É–≥–æ–¥—É.")
            return

        # üî¢ –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ä—ñ–≤–Ω—ñ–≤
        levels = calculate_trade_levels(
            entry_price=entry_price,
            leverage=20,
            position_usdt=30,
            risk_usdt=3
        )

        print("üìä –†—ñ–≤–Ω—ñ —Ä–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω—ñ:")
        print(f"–°—Ç–æ–ø: {levels['stop_price']}")
        print(f"TP1 (25%): {levels['tp1_price']}")
        print(f"TP –ø–æ–≤–Ω–∏–π: {levels['take_profit_price']}")
        print(f"–ë/—É –∑ –∫–æ–º—ñ—Å—ñ—î—é: {levels['break_even_price']}")

        # üí∞ –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –ø–æ–∑–∏—Ü—ñ—ó
        side = "buy" if direction == "LONG" else "sell"
        margin = round(30 / entry_price, 3)

        open_market_position(symbol, side=side, margin=margin, leverage=20)

        # üéØ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–µ–π–∫—É —ñ —Å—Ç–æ–ø—É
        set_tp_sl(symbol, tp_price=levels["take_profit_price"], sl_price=levels["stop_price"], side=side)

        print("‚úÖ –£–≥–æ–¥–∞ –ø–æ–≤–Ω—ñ—Å—Ç—é –æ–±—Ä–æ–±–ª–µ–Ω–∞")

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ —Å–∏–≥–Ω–∞–ª—É: {e}")
